<?xml version="1.0"?>
<bindings id="consoleLogger-bindings"
	xmlns="http://www.mozilla.org/xbl"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
	<binding id="consoleLoggerItem">
		<content>
			<children />
			<xul:grid flex="1">
				<xul:columns>
					<xul:column />
					<xul:column flex="1" />
				</xul:columns>
				<xul:rows>
					<xul:row align="center" class="cl-row-main">
						<xul:label value="Name:" />
						<xul:hbox align="center">
							<xul:textbox anonid="name" size="30" />
							<xul:checkbox anonid="enabled" label="Enabled" />
						</xul:hbox>
					</xul:row>
					<xul:row align="center" class="cl-row-detail">
						<xul:label value="Source pattern:" />
						<xul:textbox anonid="source" flex="1" />
					</xul:row>
					<xul:row align="center" class="cl-row-detail">
						<xul:label value="Message pattern:" />
						<xul:textbox anonid="message" flex="1" />
					</xul:row>
					<xul:row align="center" class="cl-row-detail">
						<xul:label value="Exclude pattern:" />
						<xul:textbox anonid="exclude" flex="1" />
					</xul:row>
				</xul:rows>
			</xul:grid>
		</content>
		<implementation>
			<field name="params">["name", "enabled", "source", "message", "exclude"]</field>
			<method name="getItem">
				<parameter name="anonId" />
				<body>
					return this.ownerDocument.getAnonymousElementByAttribute(this, "anonid", anonId);
				</body>
			</method>
			<property name="state">
				<getter>
					var state = { __proto__: null };
					this.params.forEach(function(name) {
						var elt = this.getItem(name);
						state[name] = "checked" in elt ? elt.checked : elt.value;
					}, this);
					state.locked = this.getItem("name").disabled;
					return state;
				</getter>
				<setter>
				<![CDATA[
					var state = val;
					for(var name in state) if(Object.hasOwnProperty.call(state, name)) {
						var elt = this.getItem(name);
						if(!elt)
							continue;
						if("checked" in elt)
							elt.checked = state[name];
						else
							elt.value = state[name];
					}
					if("locked" in state && state.locked)
						this.getItem("name").disabled = true;
				]]>
				</setter>
			</property>
			<method name="focus">
				<body>
					var nameField = this.getItem("name").inputField;
					nameField.focus();
					nameField.select();
				</body>
			</method>
		</implementation>
	</binding>
</bindings>